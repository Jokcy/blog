{"data":{"allMdx":{"totalCount":10,"nodes":[{"id":"18cfd4b8-88e8-5bba-8254-5711fbc5d14b","frontmatter":{"title":"简单的流程控制库：seq","date":"2019-05-29","tags":["开源项目"],"cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1559133925424&di=2169c4a39814522108cbe54a12ac1df9&imgtype=0&src=http%3A%2F%2Fimages.freeimages.com%2Fimages%2Fpreviews%2F5db%2Fwaterfall-1360997.jpg"},"excerpt":"项目地址 缘由 开发该项目主要起因有如下两点： 曾经在面试中被问到过，当时聊得挺好，建立了基本得模型，但一直没真正实现 最近在写  mdx-ppt  开源项目的时候看到了一个类似的实现，所以想起来自己实现以下 类似的库叫  through…","parent":{"__typename":"File","name":"seq","relativePath":"open-source/seq.md","relativeDirectory":"open-source"}},{"id":"bddff3b3-df89-5c74-86be-ffca62705b7d","frontmatter":{"title":"React组件化复用的一些技巧","date":"2019-02-17","tags":["react"],"cover":"http://ww1.sinaimg.cn/large/a90af92bly1g0hh3u7v16j20go0b4q37.jpg"},"excerpt":"复用是组件化开发体系的立命之本，可以说组件化的初衷就是为了复用性。但是组件化的复用方式也存在一定的问题，其中拆分粒度就是其中一个绕不开的话题，今天咱们就来讲一讲 React 当中的一个不太常用的 API： cloneElement ，他如何帮组我们更好得进行组件拆分。 假如我们有一个 Layout 组件，那么一般来说这个组件主要接收的就是 children…","parent":{"__typename":"File","name":"react-clone-element","relativePath":"react/react-clone-element.md","relativeDirectory":"react"}},{"id":"02e2c6bf-e197-53e3-842d-cc17e95bd82a","frontmatter":{"title":"Markdown 和 React，让你写 PPT 变得无比简单","date":"2019-06-04","tags":["开源项目"],"cover":"http://ww1.sinaimg.cn/mw690/a90af92bly1g3p6a2uqnaj20zk0kiwi5.jpg"},"excerpt":"介绍 项目地址 ，先来一波 star 如何 😊 mdx-ppt 是一个帮助你快速创建类似 PPT 展示的网页的工具，你可以非常方便得通过写一个 Markdown 文件，创建一个 PPT 网页。 这类工具非常多，那么我为什么要重新开发一个呢？因为我用过的很多都是纯 Markdown 的，虽然同样方便，但是限制就变得非常多，因为 Markdown…","parent":{"__typename":"File","name":"mdx-ppt","relativePath":"open-source/mdx-ppt.md","relativeDirectory":"open-source"}},{"id":"c92a3d16-9305-5009-a802-b038f2d272e9","frontmatter":{"title":"你好，我的新博客","date":"2019-06-01","tags":["杂谈"],"cover":"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3675552329,3696214605&fm=26&gp=0.jpg"},"excerpt":"说起来，这个博客从去年年底就开始做了，去年年底公司倒闭之后，就一直没去找新的工作，\n先是做了一个  React 源码解析 ，之后也就快过年了。\n年底没什么事情做，逛逛外网各种大佬的博客，了解到了  Gatsby  这个神器，\n马上被吸引了。正好 React…","parent":{"__typename":"File","name":"hello-my-new-blog","relativePath":"talks/hello-my-new-blog.md","relativeDirectory":"talks"}},{"id":"d75550e4-f2e1-5ebe-88c0-461726640837","frontmatter":{"title":"vue hook API 可能存在的问题","date":"2019-06-24","tags":["vue"],"cover":"http://www.getgametackle.com.au/wp-content/uploads/2016/06/MEAT-HOOK-D-STYLE.png"},"excerpt":"关于最近 Vue 社区的激烈讨论，不知道大家是否有所耳闻。其主要原因是 Evan You 前几天发布了一个新的关于 Vue3 的 RFC，主要描述了 hook API，通过  setup  方法，我们可以不需要再区分书写  data ， computed ， watch  等属性来创建一个 vue…","parent":{"__typename":"File","name":"vue-hooks-preview","relativePath":"vue/vue-hooks-preview.md","relativeDirectory":"vue"}},{"id":"f3e9dbab-cc3c-5131-821b-767149447481","frontmatter":{"title":"React HOC高阶组件详解","date":"2018-08-7","tags":["react"],"cover":"http://ww1.sinaimg.cn/large/a90af92bly1g0e2q3qzrvj20u00gwt95.jpg"},"excerpt":"High Order Component（包装组件，后面简称 HOC），是 React 开发中提高组件复用性的高级技巧。HOC 并不是 React 的 API，他是根据 React 的特性形成的一种开发模式。 HOC 具体上就是一个接受组件作为参数并返回一个新的组件的方法 在 React 的第三方生态中，有非常多的使用，比如 Redux 的 connect 方法或者 React-Router…","parent":{"__typename":"File","name":"react-hoc","relativePath":"react/react-hoc.md","relativeDirectory":"react"}},{"id":"2d469503-bd3d-56c5-9db0-f7c58a9fa501","frontmatter":{"title":"React State Hooks 中存在的陷阱，在使用 Hooks 之前必须掌握","date":"2019-03-18","tags":["react"],"cover":"http://ww1.sinaimg.cn/large/a90af92bly1g0e2q3qzrvj20u00gwt95.jpg"},"excerpt":"伴随着 React Hooks 的正式发布，因为其易用性以及对于逻辑代码的复用性更强，毫无疑问越来越多的同学会偏向于使用 Hooks 来写自己的组件。但是随着使用的深入，我们发现了一些 State Hooks 的陷阱，那么今天我们就来分析一下 State Hooks 存在的一些陷阱，帮助同学们踩坑。 前几天在 twitter 上看到了一个关于 Hooks 的讨论，其内容围绕着下面的 demo…","parent":{"__typename":"File","name":"state-hooks-traps","relativePath":"react/state-hooks-traps.md","relativeDirectory":"react"}},{"id":"de99c85b-e41b-593b-b3dc-6404b802a70b","frontmatter":{"title":"阅读源码后，来讲讲React Hooks是怎么实现的","date":"2018-10-10","tags":["react"],"cover":"https://user-gold-cdn.xitu.io/2018/11/5/166e20d92aa52108?imageView2/2/w/480/h/480/q/85/interlace/1"},"excerpt":"React 16.7-alpha 中新增了新功能： Hooks 。总结他的功能就是：让 FunctionalComponent 具有 ClassComponent 的功能。 按照 Dan 的说法，设计 Hooks 主要是解决 ClassComponent 的几个问题： 很难复用逻辑（只能用 HOC，或者 render props…","parent":{"__typename":"File","name":"the-principle-of-react-hooks","relativePath":"react/the-principle-of-react-hooks.md","relativeDirectory":"react"}},{"id":"1c11a63f-2edb-5371-813e-fe9403fe86c5","frontmatter":{"title":"为什么你应该放弃React老的Context API用新的Context API","date":"2018-10-2","tags":["react"],"cover":"https://user-gold-cdn.xitu.io/2018/9/25/1661089d06718faf?w=2524&h=866&f=png&s=106307"},"excerpt":"React16.3 发布了新的 Context API，并且已经确认了将在下一个版本废弃老的 Context API。所以大家更新到新的 Context API 是无可厚非的事情。而这篇文章会从原理的角度为大家分析为什么要用新的 API--不仅仅是因为 React 官方要更新，毕竟更新了你也可以用 16 版本的 React 来使用老的 API--而是因为新的 API 性能比老 API…","parent":{"__typename":"File","name":"why-new-context-api","relativePath":"react/why-new-context-api.md","relativeDirectory":"react"}},{"id":"7a50d996-2f77-5919-aceb-0c0a571b3e34","frontmatter":{"title":"为什么react-redux没有更新hooks API","date":"2019-02-27","tags":["react","redux"],"cover":"http://ww1.sinaimg.cn/large/a90af92bly1g0qi36cwv4j20yn077aar.jpg"},"excerpt":"按照正常来讲，像 React-Redux 这一类较为活跃的社区类库，在 React 有较大的更新出现的时候一般都会及时跟进的。而这一次 React 的 Hooks 发布，有将近两个月的 beta 期，以及到截止本篇文章发布已经 Hooks 正式版也已经将近一个月来，React-Redux 到现在都没有正式发布一个类似 useRedux 这样的 Hooks API…","parent":{"__typename":"File","name":"why-react-redux-not-update-hooks","relativePath":"react/why-react-redux-not-update-hooks.md","relativeDirectory":"react"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"allTags":[{"key":"__all"},{"key":"react","value":6},{"key":"开源项目","value":2},{"key":"杂谈","value":1},{"key":"vue","value":1},{"key":"redux","value":1}],"tag":{"key":"杂谈","value":1}}}