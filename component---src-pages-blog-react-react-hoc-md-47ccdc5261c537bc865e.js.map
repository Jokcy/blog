{"version":3,"sources":["webpack:///./src/pages/blog/react/react-hoc.md"],"names":["_frontmatter","title","date","cover","description","tags","layoutProps","MDXLayout","MDXContent","_ref","components","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","assign","mdxType","parentName","className","href","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-react-react-hoc-md-47ccdc5261c537bc865e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"React HOC高阶组件详解\",\n  \"date\": \"2018-08-7\",\n  \"cover\": \"http://ww1.sinaimg.cn/large/a90af92bly1g0e2q3qzrvj20u00gwt95.jpg\",\n  \"description\": \"React 的高阶组件（HOC）是非常常用的组件逻辑拆分复用的开发模式，在 Redux、React-Router 等常见的 React 生态组件中都会用到他，学会他能够帮助我们更好得进行 React 项目开发...\",\n  \"tags\": [\"react\"]\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`High Order Component（包装组件，后面简称 HOC），是 React 开发中提高组件复用性的高级技巧。HOC 并不是 React 的 API，他是根据 React 的特性形成的一种开发模式。`}</p>\n    <p>{`HOC 具体上就是一个接受组件作为参数并返回一个新的组件的方法`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` EnhancedComponent = higherOrderComponent(WrappedComponent)`}</code></pre>\n    <p>{`在 React 的第三方生态中，有非常多的使用，比如 Redux 的`}<inlineCode parentName=\"p\">{`connect`}</inlineCode>{`方法或者 React-Router 的`}<inlineCode parentName=\"p\">{`withrouter`}</inlineCode>{`方法。`}</p>\n    <h3>{`举个例子`}</h3>\n    <p>{`我们有两个组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// CommentList`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`CommentList`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`constructor`}</span>{`(props) {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`super`}</span>{`(props)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.state = {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// \"DataSource\" is some global data source`}</span>{`\n      comments: DataSource.getComments(),\n    }\n  }\n\n  componentDidMount() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Subscribe to changes`}</span>{`\n    DataSource.addChangeListener(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange)\n  }\n\n  componentWillUnmount() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Clean up listener`}</span>{`\n    DataSource.removeChangeListener(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange)\n  }\n\n  handleChange() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Update component state whenever the data source changes`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.setState({\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`comments`}</span>{`: DataSource.getComments(),\n    })\n  }\n\n  render() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` (\n      `}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`div`}</span>{`>`}</span>{`\n        {this.state.comments.map(comment => (\n          `}</span>{`<Comment comment={comment} key={comment.id} />\n        ))}\n      </div>`}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}>{`\n    )\n  }\n}`}</span></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// BlogPost`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`BlogPost`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`constructor`}</span>{`(props) {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`super`}</span>{`(props)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.state = {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`blogPost`}</span>{`: DataSource.getBlogPost(props.id),\n    }\n  }\n\n  componentDidMount() {\n    DataSource.addChangeListener(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange)\n  }\n\n  componentWillUnmount() {\n    DataSource.removeChangeListener(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange)\n  }\n\n  handleChange() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.setState({\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`blogPost`}</span>{`: DataSource.getBlogPost(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.props.id),\n    })\n  }\n\n  render() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`TextBlock`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`text`}</span>{`=`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-string\"\n            }}>{`{this.state.blogPost}`}</span>{` />`}</span>{`\n  }\n}`}</span></code></pre>\n    <p>{`他们虽然是两个不同的组件，对 DataSource 的需求也不同，但是他们有很多的内容是相似的：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`在组件渲染之后监听 DataSource`}</li>\n      <li parentName=\"ul\">{`在监听器里面调用 setState`}</li>\n      <li parentName=\"ul\">{`在 unmout 的时候删除监听器`}</li>\n    </ul>\n    <p>{`在大型的工程开发里面，这种相似的代码会经常出现，那么如果有办法把这些相似代码提取并复用，对工程的可维护性和开发效率可以带来明显的提升。`}</p>\n    <p>{`使用 HOC 我们可以提供一个方法，并接受不了组件和一些组件间的区别配置作为参数，然后返回一个包装过的组件作为结果。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`withSubscription`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`WrappedComponent, selectData`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// ...and returns another component...`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`constructor`}</span>{`(props) {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`super`}</span>{`(props)\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.state = {\n        `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`data`}</span>{`: selectData(DataSource, props),\n      }\n    }\n\n    componentDidMount() {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// ... that takes care of the subscription...`}</span>{`\n      DataSource.addChangeListener(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange)\n    }\n\n    componentWillUnmount() {\n      DataSource.removeChangeListener(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handleChange)\n    }\n\n    handleChange() {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.setState({\n        `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`data`}</span>{`: selectData(DataSource, `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.props),\n      })\n    }\n\n    render() {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// ... and renders the wrapped component with the fresh data!`}</span>{`\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Notice that we pass through any additional props`}</span>{`\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`WrappedComponent`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`data`}</span>{`=`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-string\"\n            }}>{`{this.state.data}`}</span>{` {`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`...this.props`}</span>{`} />`}</span>{`\n    }\n  }\n}`}</span></code></pre>\n    <p>{`然后我们就可以通过简单的调用该方法来包装组件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` CommentListWithSubscription = withSubscription(CommentList, DataSource =>\n  DataSource.getComments()\n)\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` BlogPostWithSubscription = withSubscription(\n  BlogPost,\n  (DataSource, props) => DataSource.getBlogPost(props.id)\n)`}</code></pre>\n    <p>{`注意：在 HOC 中我们并没有修改输入的组件，也没有通过继承来扩展组件。HOC 是通过组合的方式来达到扩展组件的目的，一个 HOC 应该是一个没有副作用的方法。`}</p>\n    <p>{`在这个例子中我们把两个组件相似的生命周期方法提取出来，并提供 selectData 作为参数让输入组件可以选择自己想要的数据。因为 withSubscription 是个纯粹的方法，所以以后如果有相似的组件，都可以通过该方法进行包装，能够节省非常多的重复代码。`}</p>\n    <h3>{`不要修改原始组件，使用组合进行功能扩展`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`logProps`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`InputComponent`}</span>{`) `}</span>{`{\n  InputComponent.prototype.componentWillReceiveProps = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`nextProps`}</span>{`) `}</span>{`{\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`console`}</span>{`.log(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'Current props: '`}</span>{`, `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.props)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`console`}</span>{`.log(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'Next props: '`}</span>{`, nextProps)\n  }\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// The fact that we're returning the original input is a hint that it has`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// been mutated.`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` InputComponent\n}\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// EnhancedComponent will log whenever props are received`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` EnhancedComponent = logProps(InputComponent)`}</code></pre>\n    <p>{`通过以上方式我们也可以达到扩展组件的效果，但是会存在一些问题`}</p>\n    <ul>\n      <li parentName=\"ul\">{`如果 InputComponent 本身也有`}<inlineCode parentName=\"li\">{`componentWillReceiveProps`}</inlineCode>{`生命周期方法，那么就会被覆盖`}</li>\n      <li parentName=\"ul\">{`functional component 不适用，因为他根本不存在生命周期方法`}</li>\n    </ul>\n    <p>{`修改原始组件的方式缺乏抽象化，使用者必须知道这个方法是如何实现的来避免上面提到的问题。`}</p>\n    <p>{`如果通过组合的方式来做，我们就可以避免这些问题`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`logProps`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`InputComponent`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n    componentWillReceiveProps(nextProps) {\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`console`}</span>{`.log(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'Current props: '`}</span>{`, `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.props)\n      `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`console`}</span>{`.log(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'Next props: '`}</span>{`, nextProps)\n    }\n    render() {\n      ;`}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`InputComponent`}</span>{` {`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`...this.props`}</span>{`} />`}</span>{`\n    }\n  }\n}\n\n// EnhancedComponent will log whenever props are received\nconst EnhancedComponent = logProps(InputComponent)`}</span></code></pre>\n    <h3>{`惯例：无关的 props 传入到原始组件`}</h3>\n    <p>{`HOC 组件会在原始组件的基础上增加一些扩展功能使用的 props，那么这些 props 就不应该传入到原始组件（当然有例外，比如 HOC 组件需要使用原始组件指定的 props），一般来说我们会这样处理 props：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}>{`render() {\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Filter out extra props that are specific to this HOC and shouldn't be`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// passed through`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` { extraProp, ...passThroughProps } = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.props;\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Inject props into the wrapped component. These are usually state values or`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// instance methods.`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` injectedProp = someStateOrInstanceMethod;\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Pass props to wrapped component`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` (\n    `}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`WrappedComponent`}</span>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`injectedProp`}</span>{`=`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-string\"\n            }}>{`{injectedProp}`}</span>{`\n      {`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`...passThroughProps`}</span>{`}\n    />`}</span>{`\n  );\n}`}</span></code></pre>\n    <p><inlineCode parentName=\"p\">{`extraProp`}</inlineCode>{`是 HOC 组件中要用的 props，不用的剩下的 props 我们都认为是原始组件需要使用的 props，如果是两者通用的 props 你可以单独传递。`}</p>\n    <h3>{`惯例：包装组件的显示名称来方便调试`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`withSubscription`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`WrappedComponent`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`WithSubscription`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`/* ... */`}</span>{`\n  }\n  WithSubscription.displayName = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`\\`WithSubscription(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-subst\"\n          }}>{`\\${getDisplayName(\n    WrappedComponent\n  )}`}</span>{`)\\``}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` WithSubscription\n}\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`getDisplayName`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`WrappedComponent`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` WrappedComponent.displayName || WrappedComponent.name || `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'Component'`}</span>{`\n}`}</code></pre>\n    <p>{`简单来说就是通过手动指定`}<inlineCode parentName=\"p\">{`displayName`}</inlineCode>{`来让 HOC 组件能够更方便得被 react devtool 观察到`}</p>\n    <h3>{`惯例：不要在 render 方法里面调用 HOC 方法`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}>{`render() {\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// A new version of EnhancedComponent is created on every render`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// EnhancedComponent1 !== EnhancedComponent2`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` EnhancedComponent = enhance(MyComponent);\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// That causes the entire subtree to unmount/remount each time!`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`EnhancedComponent`}</span>{` />`}</span>{`;\n}`}</span></code></pre>\n    <p>{`一来每次调用`}<inlineCode parentName=\"p\">{`enhance`}</inlineCode>{`返回的都是一个新的 class，react 的 diffing 算法是根据组件的特征来判断是否需要重新渲染的，如果两次 render 的时候组件之间不是(===)完全相等的，那么会直接重新渲染，而部署根据 props 传入之后再进行 diff，对性能损耗非常大。并且重新渲染会让之前的组件的 state 和 children 全部丢失。`}</p>\n    <p>{`二来 React 的组件是通过 props 来改变其显示的，完全没有必要每次渲染动态产生一个组件，理论上需要在渲染时自定义的参数，都可以通过事先指定好 props 来实现可配置。`}</p>\n    <h3>{`静态方法必须被拷贝`}</h3>\n    <p>{`有时候会在组件的 class 上面外挂一下帮助方法，如果按照上面的方法进行包装，那么包装之后的 class 就没有来这些静态方法，这时候为了保持组件使用的一致性，一般我们会把这些静态方法拷贝到包装后的组件上。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`enhance`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`WrappedComponent`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Enhance`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`/*...*/`}</span>{`\n  }\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Must know exactly which method(s) to copy :(`}</span>{`\n  Enhance.staticMethod = WrappedComponent.staticMethod\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` Enhance\n}`}</code></pre>\n    <p>{`这个之适用于你已知输入组件存在那些静态方法的情况，如果需要可扩展性更高，那么可以选择使用第三方插件`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mridgway/hoist-non-react-statics#readme\"\n      }}><inlineCode parentName=\"a\">{`hoist-non-react-statics`}</inlineCode></a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-jsx\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`import`}</span>{` hoistNonReactStatic `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`from`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'hoist-non-react-statics'`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`enhance`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`WrappedComponent`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Enhance`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`/*...*/`}</span>{`\n  }\n  hoistNonReactStatic(Enhance, WrappedComponent)\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` Enhance\n}`}</code></pre>\n    <h3>{`ref`}</h3>\n    <p>{`ref 作为 React 中的特殊属性--类似于 key，并不属于 props，也就是说我们使用传递 props 的方式并不会把 ref 传递进去，那么这时候如果我们在 HOC 组件上放一个 ref，拿到的是包装之后的组件而不是原始组件，这可能就会导致一些问题。`}</p>\n    <p>{`在 React 16.3 之后官方增加来一个`}<inlineCode parentName=\"p\">{`React.forwardRef`}</inlineCode>{`方法来解决这个问题，具体可以参考`}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/forwarding-refs.html\"\n      }}>{`这里`}</a></p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}