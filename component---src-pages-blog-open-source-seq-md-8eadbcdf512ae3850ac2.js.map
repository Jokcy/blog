{"version":3,"sources":["webpack:///./src/pages/blog/open-source/seq.md"],"names":["_frontmatter","title","date","cover","description","tags","layoutProps","MDXLayout","MDXContent","_ref","components","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","assign","mdxType","parentName","href","className","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-open-source-seq-md-8eadbcdf512ae3850ac2.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"简单的流程控制库：seq\",\n  \"date\": \"2019-05-29\",\n  \"cover\": \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1559133925424&di=2169c4a39814522108cbe54a12ac1df9&imgtype=0&src=http%3A%2F%2Fimages.freeimages.com%2Fimages%2Fpreviews%2F5db%2Fwaterfall-1360997.jpg\",\n  \"description\": \"seq 是一个简单的 JavaScript 函数流程调用控制工具，其可以把上一个函数的返回作为下一个函数的参数，并且无论函数是否是异步的，都可以达到串行调用的目的...\",\n  \"tags\": [\"开源项目\"]\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"https://github.com/Jokcy/seq\"\n        }}>{`项目地址`}</a></strong></p>\n    <h1>{`缘由`}</h1>\n    <p>{`开发该项目主要起因有如下两点：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`曾经在面试中被问到过，当时聊得挺好，建立了基本得模型，但一直没真正实现`}</li>\n      <li parentName=\"ol\">{`最近在写 `}<inlineCode parentName=\"li\">{`mdx-ppt`}</inlineCode>{` 开源项目的时候看到了一个类似的实现，所以想起来自己实现以下`}</li>\n    </ol>\n    <p>{`类似的库叫 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/through\"\n      }}>{`through`}</a></p>\n    <p>{`那么这个库是干什么的呢？简单描述一下需求就是：`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`我想要连续调用一系列的函数，他们有明确的先后顺序，而且上一个函数的返回值需要作为下一个函数的参数，这一系列方法可以是异步的也可以是同步的。`}</p>\n    </blockquote>\n    <h1>{`使用方法`}</h1>\n    <h3>{`安装`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}>{`npm i seq-fns\n\nyarn add seq-fns`}</code></pre>\n    <h3>{`使用`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` seq = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`require`}</span>{`(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'seq'`}</span>{`)\n\nseq([\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`x`}</span>{` =>`}</span>{` x + `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`,\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`async`}</span>{` x => x + `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`2`}</span>{`,\n  x => `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`Promise`}</span>{`(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`resolve`}</span>{` =>`}</span>{` setTimeout(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`()`}</span>{` =>`}</span>{` resolve(x + `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`3`}</span>{`), `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`500`}</span>{`)),\n])\n  .run(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`)\n  .then(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`result`}</span>{` =>`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`console`}</span>{`.log(result))\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// 7 (1 + 1 + 2 + 3)`}</span></code></pre>\n    <p>{`你可以通过 `}<inlineCode parentName=\"p\">{`add`}</inlineCode>{` 方法动态增加处理函数`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}>{`seq.add(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`x`}</span>{` =>`}</span>{` x + `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`)`}</code></pre>\n    <p>{`seq 会根据传入函数的顺序依次执行，并且把上一次处理的结果作为下一个函数的参数传入，函数可以是同步的也可以是异步的，最终 `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` 方法都会返回的一个 promise 并返回调用结果`}</p>\n    <h3>{`错误处理`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}>{`seq([\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`x`}</span>{` =>`}</span>{` x + `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`,\n  x => {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`throw`}</span>{` x\n  },\n])\n  .run(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`)\n  .catch(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`err`}</span>{` =>`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-built_in\"\n        }}>{`console`}</span>{`.log(err))\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// 2`}</span></code></pre>\n    <p>{`任何在执行过程中的报错都可以在返回的`}<inlineCode parentName=\"p\">{`promise`}</inlineCode>{`中被捕获，包括：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`同步 `}<inlineCode parentName=\"li\">{`throw`}</inlineCode>{` 的错误`}</li>\n      <li parentName=\"ul\">{`promise `}<inlineCode parentName=\"li\">{`reject`}</inlineCode>{` 的错误`}</li>\n      <li parentName=\"ul\">{`异步方法 `}<inlineCode parentName=\"li\">{`throw`}</inlineCode>{` 的错误`}</li>\n    </ul>\n    <h1>{`roadmap`}</h1>\n    <p>{`该项目更多的是一个玩具项目，有一些实现上的细节还是值得去尝试的，比如目前有几个想法：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`多个参数的传递`}</li>\n      <li parentName=\"ol\">{`回调形式的异步函数`}</li>\n      <li parentName=\"ol\">{`写一些 benchmark 来对比同类型的库`}</li>\n    </ol>\n    <p>{`以上就是这个项目的一些细节，有兴趣的小伙伴可以点一下 start，当然如果想自己也来玩一下，欢迎 fork。当然 PR 也是非常欢迎的 😂。`}</p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}