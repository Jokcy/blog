(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{262:function(e,a,s){"use strict";s.r(a),s.d(a,"_frontmatter",function(){return b}),s.d(a,"default",function(){return p});s(37);var n=s(29),t=s.n(n),c=(s(0),s(99)),b={title:"简单的流程控制库：seq",date:"2019-05-29",cover:"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1559133925424&di=2169c4a39814522108cbe54a12ac1df9&imgtype=0&src=http%3A%2F%2Fimages.freeimages.com%2Fimages%2Fpreviews%2F5db%2Fwaterfall-1360997.jpg",description:"seq 是一个简单的 JavaScript 函数流程调用控制工具，其可以把上一个函数的返回作为下一个函数的参数，并且无论函数是否是异步的，都可以达到串行调用的目的...",tags:["开源项目"]},l={_frontmatter:b},j="wrapper";function p(e){var a=e.components,s=t()(e,["components"]);return Object(c.b)(j,Object.assign({},l,s,{components:a,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object.assign({parentName:"strong"},{href:"https://github.com/Jokcy/seq"}),"项目地址"))),Object(c.b)("h1",null,"缘由"),Object(c.b)("p",null,"开发该项目主要起因有如下两点："),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"曾经在面试中被问到过，当时聊得挺好，建立了基本得模型，但一直没真正实现"),Object(c.b)("li",{parentName:"ol"},"最近在写 ",Object(c.b)("inlineCode",{parentName:"li"},"mdx-ppt")," 开源项目的时候看到了一个类似的实现，所以想起来自己实现以下")),Object(c.b)("p",null,"类似的库叫 ",Object(c.b)("a",Object.assign({parentName:"p"},{href:"https://www.npmjs.com/package/through"}),"through")),Object(c.b)("p",null,"那么这个库是干什么的呢？简单描述一下需求就是："),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"我想要连续调用一系列的函数，他们有明确的先后顺序，而且上一个函数的返回值需要作为下一个函数的参数，这一系列方法可以是异步的也可以是同步的。")),Object(c.b)("h1",null,"使用方法"),Object(c.b)("h3",null,"安装"),Object(c.b)("pre",null,Object(c.b)("code",Object.assign({parentName:"pre"},{className:"hljs language-js"}),"npm i seq-fns\n\nyarn add seq-fns")),Object(c.b)("h3",null,"使用"),Object(c.b)("pre",null,Object(c.b)("code",Object.assign({parentName:"pre"},{className:"hljs language-js"}),Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-keyword"}),"const")," seq = ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-built_in"}),"require"),"(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-string"}),"'seq'"),")\n\nseq([\n  ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"x")," =>")," x + ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"1"),",\n  ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-keyword"}),"async")," x => x + ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"2"),",\n  x => ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-keyword"}),"new")," ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-built_in"}),"Promise"),"(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"resolve")," =>")," setTimeout(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"()")," =>")," resolve(x + ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"3"),"), ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"500"),")),\n])\n  .run(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"1"),")\n  .then(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"result")," =>")," ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-built_in"}),"console"),".log(result))\n\n",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-comment"}),"// 7 (1 + 1 + 2 + 3)"))),Object(c.b)("p",null,"你可以通过 ",Object(c.b)("inlineCode",{parentName:"p"},"add")," 方法动态增加处理函数"),Object(c.b)("pre",null,Object(c.b)("code",Object.assign({parentName:"pre"},{className:"hljs language-js"}),"seq.add(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"x")," =>")," x + ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"1"),")")),Object(c.b)("p",null,"seq 会根据传入函数的顺序依次执行，并且把上一次处理的结果作为下一个函数的参数传入，函数可以是同步的也可以是异步的，最终 ",Object(c.b)("inlineCode",{parentName:"p"},"run")," 方法都会返回的一个 promise 并返回调用结果"),Object(c.b)("h3",null,"错误处理"),Object(c.b)("pre",null,Object(c.b)("code",Object.assign({parentName:"pre"},{className:"hljs language-js"}),"seq([\n  ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"x")," =>")," x + ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"1"),",\n  x => {\n    ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-keyword"}),"throw")," x\n  },\n])\n  .run(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-number"}),"1"),")\n  .catch(",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-function"}),Object(c.b)("span",Object.assign({parentName:"span"},{className:"hljs-params"}),"err")," =>")," ",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-built_in"}),"console"),".log(err))\n\n",Object(c.b)("span",Object.assign({parentName:"code"},{className:"hljs-comment"}),"// 2"))),Object(c.b)("p",null,"任何在执行过程中的报错都可以在返回的",Object(c.b)("inlineCode",{parentName:"p"},"promise"),"中被捕获，包括："),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"同步 ",Object(c.b)("inlineCode",{parentName:"li"},"throw")," 的错误"),Object(c.b)("li",{parentName:"ul"},"promise ",Object(c.b)("inlineCode",{parentName:"li"},"reject")," 的错误"),Object(c.b)("li",{parentName:"ul"},"异步方法 ",Object(c.b)("inlineCode",{parentName:"li"},"throw")," 的错误")),Object(c.b)("h1",null,"roadmap"),Object(c.b)("p",null,"该项目更多的是一个玩具项目，有一些实现上的细节还是值得去尝试的，比如目前有几个想法："),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"多个参数的传递"),Object(c.b)("li",{parentName:"ol"},"回调形式的异步函数"),Object(c.b)("li",{parentName:"ol"},"写一些 benchmark 来对比同类型的库")),Object(c.b)("p",null,"以上就是这个项目的一些细节，有兴趣的小伙伴可以点一下 start，当然如果想自己也来玩一下，欢迎 fork。当然 PR 也是非常欢迎的 😂。"))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-blog-open-source-seq-md-8eadbcdf512ae3850ac2.js.map