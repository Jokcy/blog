{"version":3,"sources":["webpack:///./src/pages/blog/react/the-principle-of-react-hooks.md"],"names":["_frontmatter","title","date","cover","description","tags","layoutProps","MDXLayout","MDXContent","_ref","components","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","assign","mdxType","parentName","className","href","src","alt","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-react-the-principle-of-react-hooks-md-66cb2abcbc4da0b18491.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"阅读源码后，来讲讲React Hooks是怎么实现的\",\n  \"date\": \"2018-10-10\",\n  \"cover\": \"https://user-gold-cdn.xitu.io/2018/11/5/166e20d92aa52108?imageView2/2/w/480/h/480/q/85/interlace/1\",\n  \"description\": \"什么是 React Hooks，他解决了什么问题，又带来了哪些好处，他跟 ClassComponent 直接的区别和联系又是什么，让我来为你解答 Hooks 相关的问题...\",\n  \"tags\": [\"react\"]\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`React 16.7-alpha 中新增了新功能：`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`。总结他的功能就是：让`}<inlineCode parentName=\"p\">{`FunctionalComponent`}</inlineCode>{`具有`}<inlineCode parentName=\"p\">{`ClassComponent`}</inlineCode>{`的功能。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`import`}</span>{` React, { useState, useEffect } `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`from`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'react'`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`FunComp`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`props`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` [data, setData] = useState(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-string\"\n        }}>{`'initialState'`}</span>{`)\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`handleChange`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`e`}</span>{`) `}</span>{`{\n    setData(e.target.value)\n  }\n\n  useEffect(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`()`}</span>{` =>`}</span>{` {\n    subscribeToSomething()\n\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`()`}</span>{` =>`}</span>{` {\n      unSubscribeToSomething()\n    }\n  })\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"xml\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-tag\"\n          }}>{`<`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-name\"\n            }}>{`input`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`value`}</span>{`=`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-string\"\n            }}>{`{data}`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"hljs-attr\"\n            }}>{`onChange`}</span>{`=`}<span parentName=\"span\" {...{\n              \"className\": \"hljs-string\"\n            }}>{`{handleChange}`}</span>{` />`}</span>{`\n}`}</span></code></pre>\n    <p>{`按照`}<em parentName=\"p\">{`Dan`}</em>{`的说法，设计`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`主要是解决`}<inlineCode parentName=\"p\">{`ClassComponent`}</inlineCode>{`的几个问题：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`很难复用逻辑（只能用 HOC，或者 render props），会导致组件树层级很深`}</li>\n      <li parentName=\"ol\">{`会产生巨大的组件（指很多代码必须写在类里面）`}</li>\n      <li parentName=\"ol\">{`类组件很难理解，比如方法需要`}<inlineCode parentName=\"li\">{`bind`}</inlineCode>{`，`}<inlineCode parentName=\"li\">{`this`}</inlineCode>{`指向不明确`}</li>\n    </ol>\n    <p>{`这些确实是存在的问题，比如我们如果用了`}<inlineCode parentName=\"p\">{`react-router`}</inlineCode>{`+`}<inlineCode parentName=\"p\">{`redux`}</inlineCode>{`+`}<inlineCode parentName=\"p\">{`material-ui`}</inlineCode>{`，很可能随便一个组件最后`}<inlineCode parentName=\"p\">{`export`}</inlineCode>{`出去的代码是酱紫的：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`default`}</span>{` withStyle(style)(connect(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`/*something*/`}</span>{`)(withRouter(MyComponent)))`}</code></pre>\n    <p>{`这就是一个 4 层嵌套的`}<inlineCode parentName=\"p\">{`HOC`}</inlineCode>{`组件`}</p>\n    <p>{`同时，如果你的组件内事件多，那么你的`}<inlineCode parentName=\"p\">{`constructor`}</inlineCode>{`里面可能会酱紫：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-class\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`MyComponent`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`React`}</span>{`.`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`Component`}</span>{` `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`constructor`}</span>{`() {\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// initiallize`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler1 = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler1.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler2 = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler2.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler3 = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler3.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler4 = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler4.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler5 = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.handler5.bind(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`)\n    `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// ...more`}</span>{`\n  }\n}`}</code></pre>\n    <p>{`虽然最新的`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`语法可以用`}<inlineCode parentName=\"p\">{`handler = () => {}`}</inlineCode>{`来快捷绑定，但也就解决了一个声明的问题，整体的复杂度还是在的。`}</p>\n    <p>{`然后还有在`}<inlineCode parentName=\"p\">{`componentDidMount`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`componentDidUpdate`}</inlineCode>{`中订阅内容，还需要在`}<inlineCode parentName=\"p\">{`componentWillUnmount`}</inlineCode>{`中取消订阅的代码，里面会存在很多重复性工作。最重要的是，在一个`}<inlineCode parentName=\"p\">{`ClassComponent`}</inlineCode>{`中的生命周期方法中的代码，是很难在其他组件中复用的，这就导致了了代码复用率低的问题。`}</p>\n    <p>{`还有就是`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`代码对于打包工具来说，很难被压缩，比如方法名称。`}</p>\n    <p>{`更多详细的大家可以去看`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=V-QO-KO90iQ&t=3060s\"\n      }}><inlineCode parentName=\"a\">{`ReactConf`}</inlineCode>{`的视频`}</a>{`，我这里就不多讲了，`}<strong parentName=\"p\">{`这篇文章的主题是从源码的角度讲讲`}<inlineCode parentName=\"strong\">{`Hooks`}</inlineCode>{`是如何实现的`}</strong></p>\n    <h3>{`先来了解一些基础概念`}</h3>\n    <p>{`首先`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`是一个方法，它本身是无法存储状态的`}</p>\n    <p>{`其次，他运行在`}<inlineCode parentName=\"p\">{`FunctionalComponent`}</inlineCode>{`里面，本身也是无法保存状态的`}</p>\n    <p><inlineCode parentName=\"p\">{`useState`}</inlineCode>{`只接收一个参数`}<inlineCode parentName=\"p\">{`initial value`}</inlineCode>{`，并看不出有什么特殊的地方。所以 React 在一次重新渲染的时候如何获取之前更新过的`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`呢？`}</p>\n    <p>{`在开始讲解源码之前，大家先要建立一些概念：`}</p>\n    <h6>{`React Element`}</h6>\n    <p><inlineCode parentName=\"p\">{`JSX`}</inlineCode>{`翻译过来之后是`}<inlineCode parentName=\"p\">{`React.createElement`}</inlineCode>{`，他最终返回的是一个`}<inlineCode parentName=\"p\">{`ReactElement`}</inlineCode>{`对象，他的数据解构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` element = {\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`$$typeof`}</span>{`: REACT_ELEMENT_TYPE, `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// 是否是普通Element_Type`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Built-in properties that belong on the element`}</span>{`\n  type: type, `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// 我们的组件，比如\\`class MyComponent\\``}</span>{`\n  key: key,\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`ref`}</span>{`: ref,\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`props`}</span>{`: props,\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Record the component responsible for creating this element.`}</span>{`\n  _owner: owner,\n}`}</code></pre>\n    <p>{`这其中需要注意的是`}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`，在我们写`}<inlineCode parentName=\"p\">{`<MyClassComponent {...props} />`}</inlineCode>{`的时候，他的值就是`}<inlineCode parentName=\"p\">{`MyClassComponent`}</inlineCode>{`这个`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`，而不是他的实例，实例是在后续渲染的过程中创建的。`}</p>\n    <h6>{`Fiber`}</h6>\n    <p>{`每个节点都会有一个对应的`}<inlineCode parentName=\"p\">{`Fiber`}</inlineCode>{`对象，他的数据解构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`FiberNode`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}>{`\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n`}</span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Instance`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.tag = tag\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.key = key\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.elementType = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// 就是ReactElement的\\`$$typeof\\``}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.type = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// 就是ReactElement的type`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.stateNode = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// Fiber`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.return = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.child = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.sibling = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.index = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`0`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.ref = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.pendingProps = pendingProps\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.memoizedProps = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.updateQueue = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.memoizedState = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`this`}</span>{`.firstContextDependency = `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// ...others`}</span>{`\n}`}</code></pre>\n    <p>{`在这里我们需要注意的是`}<inlineCode parentName=\"p\">{`this.memoizedState`}</inlineCode>{`，这个`}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`就是用来存储在上次渲染过程中最终获得的节点的`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`的，每次执行`}<inlineCode parentName=\"p\">{`render`}</inlineCode>{`方法之前，React 会计算出当前组件最新的`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`然后赋值给`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`的实例，再调用`}<inlineCode parentName=\"p\">{`render`}</inlineCode>{`。`}</p>\n    <p><strong parentName=\"p\">{`所以很多不是很清楚 React 原理的同学会对 React 的`}<inlineCode parentName=\"strong\">{`ClassComponent`}</inlineCode>{`有误解，认为`}<inlineCode parentName=\"strong\">{`state`}</inlineCode>{`和`}<inlineCode parentName=\"strong\">{`lifeCycle`}</inlineCode>{`都是自己主动调用的，因为我们继承了`}<inlineCode parentName=\"strong\">{`React.Component`}</inlineCode>{`，它里面肯定有很多相关逻辑。事实上如果有兴趣可以去看一下`}<inlineCode parentName=\"strong\">{`Component`}</inlineCode>{`的源码，大概也就是 100 多行，非常简单。所以在 React 中，`}<inlineCode parentName=\"strong\">{`class`}</inlineCode>{`仅仅是一个载体，让我们写组件的时候更容易理解一点，毕竟组件和`}<inlineCode parentName=\"strong\">{`class`}</inlineCode>{`都是封闭性较强的`}</strong></p>\n    <h3>{`原理`}</h3>\n    <p>{`在知道上面的基础之后，对于`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`为什么能够保存无状态组件的原理就比较好理解了。`}</p>\n    <p>{`我们假设有这么一段代码：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-function\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"hljs-keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"hljs-title\"\n          }}>{`FunctionalComponent`}</span>{`(`}<span parentName=\"span\" {...{\n            \"className\": \"hljs-params\"\n          }}></span>{`) `}</span>{`{\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` [state1, setState1] = useState(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`)\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` [state2, setState2] = useState(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`2`}</span>{`)\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` [state3, setState3] = useState(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`3`}</span>{`)\n}`}</code></pre>\n    <p>{`先来看一张图`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://user-gold-cdn.xitu.io/2018/11/5/166e20d92aa52108?imageView2/2/w/480/h/480/q/85/interlace/1\",\n        \"alt\": \"react-hooks\"\n      }}></img></p>\n    <p>{`在我们执行`}<inlineCode parentName=\"p\">{`functionalComponent`}</inlineCode>{`的时候，在第一次执行到`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`的时候，他会对应`}<inlineCode parentName=\"p\">{`Fiber`}</inlineCode>{`对象上的`}<inlineCode parentName=\"p\">{`memoizedState`}</inlineCode>{`，这个属性原来设计来是用来存储`}<inlineCode parentName=\"p\">{`ClassComponent`}</inlineCode>{`的`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`的，因为在`}<inlineCode parentName=\"p\">{`ClassComponent`}</inlineCode>{`中`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`是一整个对象，所以可以和`}<inlineCode parentName=\"p\">{`memoizedState`}</inlineCode>{`一一对应。`}</p>\n    <p>{`但是在`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`中，React 并不知道我们调用了几次`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`，所以在保存`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`这件事情上，React 想出了一个比较有意思的方案，那就是调用`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`后设置在`}<inlineCode parentName=\"p\">{`memoizedState`}</inlineCode>{`上的对象长这样：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}>{`{\n  baseState, next, baseUpdate, queue, memoizedState\n}`}</code></pre>\n    <p>{`我们叫他`}<em parentName=\"p\">{`Hook`}</em>{`对象。这里面我们最需要关心的是`}<inlineCode parentName=\"p\">{`memoizedState`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`next`}</inlineCode>{`，`}<inlineCode parentName=\"p\">{`memoizedState`}</inlineCode>{`是用来记录这个`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`应该返回的结果的，而`}<inlineCode parentName=\"p\">{`next`}</inlineCode>{`指向的是下一次`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`对应的\\`Hook 对象。`}</p>\n    <p>{`也就是说：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}>{`hook1 => Fiber.memoizedState\nstate1 === hook1.memoizedState\nhook1.next => hook2\nstate2 === hook2.memoizedState\nhook2.next => hook3\nstate3 === hook2.memoizedState`}</code></pre>\n    <p>{`每个在`}<inlineCode parentName=\"p\">{`FunctionalComponent`}</inlineCode>{`中调用的`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`都会有一个对应的`}<inlineCode parentName=\"p\">{`Hook`}</inlineCode>{`对象，他们按照执行的顺序以类似链表的数据格式存放在`}<inlineCode parentName=\"p\">{`Fiber.memoizedState`}</inlineCode>{`上`}</p>\n    <p><strong parentName=\"p\">{`重点来了：就是因为是以这种方式进行`}<inlineCode parentName=\"strong\">{`state`}</inlineCode>{`的存储，所以`}<inlineCode parentName=\"strong\">{`useState`}</inlineCode>{`（包括其他的 Hooks）都必须在`}<inlineCode parentName=\"strong\">{`FunctionalComponent`}</inlineCode>{`的根作用域中声明，也就是不能在`}<inlineCode parentName=\"strong\">{`if`}</inlineCode>{`或者循环中声明，比如`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`if`}</span>{` (something) {\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` [state1] = useState(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`)\n}\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-comment\"\n        }}>{`// or`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`for`}</span>{` (something) {\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`const`}</span>{` [state2] = useState(`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`2`}</span>{`)\n}`}</code></pre>\n    <p><strong parentName=\"p\">{`最主要的原因就是你不能确保这些条件语句每次执行的次数是一样的`}</strong>{`，也就是说如果第一次我们创建了`}<inlineCode parentName=\"p\">{`state1 => hook1, state2 => hook2, state3 => hook3`}</inlineCode>{`这样的对应关系之后，下一次执行因为`}<inlineCode parentName=\"p\">{`something`}</inlineCode>{`条件没达成，导致`}<inlineCode parentName=\"p\">{`useState(1)`}</inlineCode>{`没有执行，那么运行`}<inlineCode parentName=\"p\">{`useState(2)`}</inlineCode>{`的时候，拿到的`}<inlineCode parentName=\"p\">{`hook`}</inlineCode>{`对象是`}<inlineCode parentName=\"p\">{`state1`}</inlineCode>{`的，那么整个逻辑就乱套了，`}<strong parentName=\"p\">{`所以这个条件是必须要遵守的！`}</strong></p>\n    <h3>{`setState`}</h3>\n    <p>{`上面讲了`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`中`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`是如何保存的，那么接下去来讲讲如何更新`}<inlineCode parentName=\"p\">{`state`}</inlineCode></p>\n    <p>{`我们调用的调用`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`返回的方法是酱紫的：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`var`}</span>{` dispatch = (queue.dispatch = dispatchAction.bind(\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`,\n  currentlyRenderingFiber$`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-number\"\n        }}>{`1`}</span>{`,\n  queue,\n))\n`}<span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`return`}</span>{` [workInProgressHook.memoizedState, dispatch]`}</code></pre>\n    <p>{`调用这个方法会创建一个`}<inlineCode parentName=\"p\">{`update`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"hljs language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"hljs-keyword\"\n        }}>{`var`}</span>{` update = {\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`expirationTime`}</span>{`: _expirationTime,\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`action`}</span>{`: action,\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`callback`}</span>{`: callback !== `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`undefined`}</span>{` ? callback : `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`,\n  `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-attr\"\n        }}>{`next`}</span>{`: `}<span parentName=\"code\" {...{\n          \"className\": \"hljs-literal\"\n        }}>{`null`}</span>{`,\n}`}</code></pre>\n    <p>{`这里的`}<inlineCode parentName=\"p\">{`action`}</inlineCode>{`是我们调用`}<inlineCode parentName=\"p\">{`setState1`}</inlineCode>{`传入的值，而这个`}<inlineCode parentName=\"p\">{`update`}</inlineCode>{`会被加入到`}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{`上，因为可能存在一次性调用多次`}<inlineCode parentName=\"p\">{`setState1`}</inlineCode>{`的清空（跟 React 的 batchUpdate 有关，以后有机会讲。）`}</p>\n    <p>{`在收集完这所有`}<inlineCode parentName=\"p\">{`update`}</inlineCode>{`之后，会调度一次`}<inlineCode parentName=\"p\">{`React`}</inlineCode>{`的更新，在更新的过程中，肯定会执行到我们的`}<inlineCode parentName=\"p\">{`FunctionalComponent`}</inlineCode>{`，那么就会执行到对应的`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`，然后我们就拿到了`}<inlineCode parentName=\"p\">{`Hook`}</inlineCode>{`对象，他保存了`}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{`对象表示有哪些更新存在，然后依次进行更新，拿到最新的`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`保存在`}<inlineCode parentName=\"p\">{`memoizedState`}</inlineCode>{`上，并且返回，最终达到了`}<inlineCode parentName=\"p\">{`setState`}</inlineCode>{`的效果。`}</p>\n    <h3>{`总结`}</h3>\n    <p>{`其实本质上跟`}<inlineCode parentName=\"p\">{`ClassComponent`}</inlineCode>{`是差不多的，只不过因为`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`拆分了单一对象`}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`，所以要用一个相对独特的方式进行数据保存，而且会存在一定的规则限制。`}</p>\n    <p>{`但是这些条件完全不能掩盖`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`的光芒，他的意义是在是太大了，让`}<inlineCode parentName=\"p\">{`React`}</inlineCode>{`这个 `}<strong parentName=\"p\">{`函数式编程`}</strong>{`范式的框架终于摆脱了要用类来创建组件的尴尬场面。事实上类的存在意义确实不大，比如`}<inlineCode parentName=\"p\">{`PuerComponent`}</inlineCode>{`现在也有对应的`}<inlineCode parentName=\"p\">{`React.memo`}</inlineCode>{`来让函数组件也能达到相同的效果。`}</p>\n    <p>{`最后，因为真的要把源码摊开来讲，就会涉及到一些其他的源码内容，比如`}<inlineCode parentName=\"p\">{`workInProgress => current`}</inlineCode>{`的转换，`}<inlineCode parentName=\"p\">{`expirationTime`}</inlineCode>{`涉及的调度等，反而会导致大家无法理解本篇文章的主体`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`，所以我在写完完整源码解析后又总结归纳了这篇文章来单独发布。希望能帮助各位童鞋更好得理解`}<inlineCode parentName=\"p\">{`Hooks`}</inlineCode>{`，并能大胆用到实际开发中去。`}</p>\n    <p>{`因为：真的很好用啊！！！`}</p>\n    <h1>{`注意`}</h1>\n    <p>{`目前`}<inlineCode parentName=\"p\">{`react-hot-loader`}</inlineCode>{`不能和`}<inlineCode parentName=\"p\">{`hooks`}</inlineCode>{`一起使用，`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/gaearon/react-hot-loader/issues/1088\"\n      }}>{`详情`}</a>{`，所以你可以考虑等到正式版再用。`}</p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}