{"version":3,"sources":["webpack:///./src/components/Image.jsx","webpack:///./src/components/post-list.jsx","webpack:///./src/templates/tags.js","webpack:///./src/utils/index.js"],"names":["AnimatedDiv","styled","animated","div","width","isServer","window","components_Image","_ref","src","_ref$defaultHeight","defaultHeight","_ref$alt","alt","rest","objectWithoutPropertiesLoose_default","_useState","useState","loaded","setLoaded","imgRef","useRef","url","react_default","a","createElement","media","srcset","sizes","image","current","Image","onload","placeHolderStyle","useMemo","height","display","alignItems","justifyContent","containerStyle","position","transition","useTransition","from","opacity","enter","leave","style","map","_ref2","item","key","props","Object","assign","image_default","fontSize","color","StyledPostItem","withStyles","root","marginBottom","padding","imgContainer","textAlign","img","maxWidth","cursor","excerpt","paddingRight","title","caption","post","classes","_post$frontmatter","frontmatter","date","cover","slug","getPostUrl","Paper","className","gatsby_browser_entry","to","Typography","variant","link_button","list","data","id","PostTags","tag","location","search","pageContext","nodeList","filterPostList","allMdx","nodes","tags","Array","isArray","indexOf","isContainTag","post_list","pageQuery","sortByDate","b","Date","parse","baseList","filter","sort","node","parent","relativeDirectory","name"],"mappings":"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","file":"component---src-templates-tags-js-d7af6331b1ee3ee7b3b4.js","sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\n\nimport { styled } from '@material-ui/styles'\n\nimport { useTransition, animated } from 'react-spring'\n\nimport ImageIcon from '@material-ui/icons/image'\n\nconst AnimatedDiv = styled(animated.div)({\n  // position: 'absolute',\n  width: '100%',\n})\n\nconst isServer = typeof window === 'undefined'\n\nexport default ({ src, defaultHeight = 200, alt = '', ...rest }) => {\n  const [loaded, setLoaded] = useState(false)\n\n  const imgRef = useRef({\n    url: <source media=\"(min-width: )\" srcset=\"\" sizes=\"\" />,\n    image: null,\n  })\n\n  const needUpdate = src !== imgRef.current.url\n\n  if (needUpdate && !isServer) {\n    setLoaded(false)\n\n    imgRef.current.url = src\n\n    const image = (imgRef.current.image = new Image())\n\n    image.onload = function() {\n      setLoaded(true)\n    }\n\n    image.src = imgRef.current.url\n  }\n\n  const { url } = imgRef.current\n\n  const placeHolderStyle = useMemo(\n    () => ({\n      height: defaultHeight,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    [defaultHeight],\n  )\n\n  const containerStyle = useMemo(() => ({ position: 'relative' }), [])\n\n  const transition = useTransition(loaded, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  if (!loaded) {\n    return (\n      <div style={placeHolderStyle}>\n        <ImageIcon fontSize=\"large\" color=\"disabled\" />\n      </div>\n    )\n  }\n\n  return (\n    <div style={containerStyle}>\n      {transition.map(({ item, key, props }) => (\n        <AnimatedDiv key={key} style={props}>\n          {item ? <img src={url} {...rest} alt={alt} /> : null}\n        </AnimatedDiv>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nimport LinkButton from './link-button'\n\nimport Image from './Image'\nimport { getPostUrl } from '../utils'\n\nconst listStyles = {}\nconst itemStyles = {\n  root: {\n    marginBottom: 20,\n    padding: 20,\n  },\n  imgContainer: {\n    display: 'block',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  img: {\n    maxWidth: '100%',\n    cursor: 'pointer',\n  },\n  excerpt: {\n    marginBottom: 20,\n    paddingRight: 20,\n  },\n  title: {\n    cursor: 'pointer',\n  },\n  caption: {\n    marginBottom: 20,\n  },\n}\n\nfunction PostItem({ post, classes }) {\n  const {\n    frontmatter: { title, date, cover },\n    excerpt,\n  } = post\n\n  const slug = getPostUrl(post)\n\n  return (\n    <Paper className={classes.root}>\n      {cover ? (\n        <Link to={slug} className={classes.imgContainer}>\n          <Image src={cover} alt=\"\" className={classes.img} />\n        </Link>\n      ) : null}\n      <Typography variant=\"h6\" className={classes.title}>\n        <Link to={slug}>{title}</Link>\n      </Typography>\n      <Typography variant=\"caption\" className={classes.caption}>\n        {date}\n      </Typography>\n      <Typography variant=\"body1\" className={classes.excerpt}>\n        {excerpt}\n      </Typography>\n      <LinkButton to={slug} variant=\"contained\" color=\"secondary\">\n        read\n      </LinkButton>\n    </Paper>\n  )\n}\n\nconst StyledPostItem = withStyles(itemStyles)(PostItem)\n\nfunction PostList({ list, data }) {\n  return list.map(post => <StyledPostItem key={post.id} post={post} />)\n}\n\nexport default withStyles(listStyles)(PostList)\n","import React from 'react'\nimport { graphql } from 'gatsby'\n// import qs from 'qs'\n\nimport PostList from '../components/post-list'\n\nimport { filterPostList } from '../utils'\n\nimport '../base-queries'\n\nfunction isContainTag(tag) {\n  return ({ frontmatter: { tags } }) => {\n    if (tag === '__all') {\n      return true\n    }\n    if (!tags) {\n      return false\n    }\n    if (Array.isArray(tags)) {\n      return tags.indexOf(tag) > -1\n    }\n    return tags === tag\n  }\n}\n\nfunction PostTags({ data, location: { search }, pageContext: { tag } }) {\n  // const { tag } = qs.parse(search, { ignoreQueryPrefix: true })\n\n  const nodeList = filterPostList(\n    data.allMdx.nodes,\n    isContainTag(tag.key || '__all'),\n  )\n\n  return <PostList list={nodeList} />\n}\n\nexport default PostTags\n\nexport const pageQuery = graphql`\n  query {\n    allMdx {\n      totalCount\n      nodes {\n        ...CommonMdxQuery\n      }\n    }\n  }\n`\n","function sortByDate(a, b) {\n  return Date.parse(b.frontmatter.date) - Date.parse(a.frontmatter.date)\n}\n\nexport function filterPostList(baseList, filter, sort = sortByDate) {\n  const filteredList = baseList.filter(filter)\n\n  return filteredList.sort(sort)\n}\n\nexport function getPostUrl(node) {\n  return `/blog/${node.parent.relativeDirectory}/${node.parent.name}`\n}\n"],"sourceRoot":""}